@model SisAdot.Models.Usuario

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Cadastrar Usuário</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (Session["Perfil"].Equals(SisAdot.Enums.PerfilUsuario.Administrador))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.PerfilUsuario, "Perfil", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.PerfilUsuario, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PerfilUsuario, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary btn-lg btn-block" onclick = "return confirm('Deseja cadastrar o usuário ?');" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar a consulta de Usuário", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
